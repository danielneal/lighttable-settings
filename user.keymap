;; User keymap
;; -----------------------------
;; Keymaps are stored as a set of diffs that are merged together together
;; to create the final set of keys. You can modify these diffs to either add
;; or subtract bindings.
;;
;; Like behaviors, keys are bound by tag. When objects with those tags are active
;; the key bindings are live. Keys can be bound to any number of Light Table commands,
;; allowing you the flexibility to execute multiple operations together. To see a list
;; of all the commands you can execute, start typing a word related to the thing you
;; want to do in between the square brackets (e.g. type "editor").

{:+ {:app {"ctrl--" [:editor.undo]
           "ctrl-shift--" [:editor.redo]
           "ctrl-i" [:dev-inspector]}

     :editor {"ctrl-x w" [:editor.watch.watch-selection]
              "ctrl-x q" [:editor.watch.unwatch]

              ;; documentation
              "ctrl-c d" [:editor.doc.toggle]

              ;; jumping around
              "ctrl-shift-." [:editor.jump-to-definition-at-cursor]
              "ctrl-shift-," [:editor.unjump]

              ;; indentation
              "tab" [:smart-indent-selection]

              ;; eval
              "ctrl-return" [:eval-editor-form]
              "ctrl-c ctrl-k" [:eval-editor]
              "ctrl-g" [:eval.cancel-all!]

              ;; loading and saving
              "ctrl-x s" [:save-all]
              "ctrl-x ctrl-s" [:save]

              ;; find
              "ctrl-s" [:find.show]

              ;; movement
              "ctrl-a" [:editor.line-start]
              "ctrl-e" [:editor.line-end]
              "ctrl-n" [:editor.line-down]
              "ctrl-p" [:editor.line-up]
              "ctrl-." [:editor.doc-end :editor.selection.clear]
              "ctrl-," [:editor.doc-start :editor.selection.clear]
              "ctrl-b" [:editor.char-left]
              "ctrl-f" [:editor.char-right]

              ;; clipboard-y stuff
              "ctrl-k" [:editor.kill-line]
              "ctrl-d" [:editor.delete-char-right]

              ;; paredit stuff
              "ctrl-=" [:paredit.select.parent]
              "ctrl-shift-right" [:paredit.grow.right]
              "ctrl-shift-left" [:paredit.shrink.right]
              "ctrl-right" [:paredit.shrink.left]
              "ctrl-left" [:paredit.grow.left]}

     :editor.keys.normal
     {"tab" [:smart-indent-selection]}

     :find-bar {"ctrl-s" [:find.next]
                "ctrl-n" [:find.next]
                "ctrl-p" [:find.prev]
                "ctrl-r" [:find.prev]
                "ctrl-g" [:find.clear :find.hide]}}

 :- {:app ["ctrl-n" "ctrl-w"]
     :editor.keys.normal ["ctrl-f"]}}
