;; User behaviors
;; -----------------------------
;; Behaviors are stored as a set of diffs that are merged together
;; to create the final set of functionality that makes up Light Table. You can
;; modify these diffs to either add or subtract functionality.
;;
;; Behaviors are added to tags, objects with those tags then automatically gain
;; whatever logic the behavior imparts. To see a list of user-level behaviors,
;; start typing a word related to the functionality you want in between the square
;; brackets (e.g. "theme").

{:+ {
     ;; The app tag is kind of like global scope. You assign behaviors that affect
     ;; all of Light Table here
     :app [(:lt.objs.style/set-skin "dark")]

     ;; The editor tag is applied to all editors
     :editor [:lt.objs.editor/no-wrap
<<<<<<< HEAD
              (:lt.objs.style/set-theme "default")
              :lt.plugins.auto-complete/auto-show-on-input
              ]

     ;; Here we can add behaviors to just clojure editors
=======
             (:lt.objs.style/font-settings "" 10 "")
              (:lt.objs.style/set-theme  "default")]
     ;; Here we can add behaviors to just  editors
>>>>>>> 1a6c7fd970f589771f1a96ec871e4a22e220693e
     :editor.clojure [(:lt.objs.langs.clj/print-length 1000)]}

 ;; You can use the subtract key to remove behavior that may get added by
 ;; another diff
 :- {:app []}}
